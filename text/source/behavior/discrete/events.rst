.. _events:

Events
------

.. index:: ! events

In the first chapter on :ref:`basic-equations` we saw examples of how
to describe continuous behavior.  The equations introduced in that
chapter applied at all times and the solutions to those equations were
always continuous.  In this chapter, we discussed the various ways in
Modelica to describe discrete behavior.  Events are the root cause of
all discrete behavior in Modelica.

Conditional Expressions
^^^^^^^^^^^^^^^^^^^^^^^

.. index:: time events

.. index:: ! time

Events are generated in one of two ways.  First, they can be generated
by conditional expressions.  In the first few examples in this
chapter, we saw that conditional expressions can trigger events.  If
these conditional expressions only involve the variable ``time``, then
we call them "time events".  The ``time`` variable is a built-in,
global variable that is treated as an "input" to all models.

.. index:: state events

If events are generated because of conditional expressions that
involve solution variables, then we call them "state events".  The
important distinctions between time events and state events were
discussed in the :ref:`first <cooling-revisited>` and :ref:`second
<bouncing-ball>` sections of this chapter, respectively.

Conditional expressions can be created using the relational operators
(``>``, ``>=``, ``<``, ``<=``, ``==``) and logical operators (``not``,
``and``, ``or``).  As we saw in our discussion of :ref:`no-event`, it
is possible to suppress the events generated by these conditional
expressions by surrounding them with the ``noEvent`` operator.

Frequently, these event generating conditional expressions occur in
the context of an ``if`` statement or an ``if`` expression.  But it
should also be noted that even a simple variable assignment, *e.g.,*

.. code-block:: modelica

      Boolean late;
    equation
      late = time>=5.0 "This will generate an event";

can trigger an event to be generated.

.. todo::

   Discuss smooth (and smoothOrder?)

Events and Functions
^^^^^^^^^^^^^^^^^^^^

.. todo::

   I Need to fill in this table more

.. index:: ! sample

In addition to being generated by conditional expressions, events can
also be generated by certain functions in Modelica.  The
following is a list of functions and how they generate events:

   * ``min``
   * ``max``
   * ``abs``
   * ``sqrt``
   * ``sign``
   * ``initial``
   * ``terminal``
   * ``edge``
   * ``change``
   * ``sample(t0,dt)`` - The ``sample`` function generates its first
     event at time ``t0`` and then generates subsequent events every
     ``dt`` seconds.  Note, the ``sample`` function is overloaded.
   * ``sample(expr,clock)``
   * ``subSample(expr, sub)``
   * ``superSample(expr, sup)``
   * ``previous``
   * ``hold``
   * ``pre``

* discrete
